<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Find Your Perfect Car - Driven</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Bruno+Ace+SC&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Iceland&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Nova+Mono&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Michroma&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Jura:wght@300..700&family=Quicksand:wght@300..700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Aldrich&family=Jura:wght@300..700&family=Quicksand:wght@300..700&display=swap" rel="stylesheet">
    
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        html {
            scroll-behavior: smooth;
        }

        body {
            font-family: 'Quicksand', sans-serif;
            line-height: 1.6;
            background: linear-gradient(135deg, #bdc7dd 0%, #bba1a1 100%);
            min-height: 100vh;
        }

        .page-container {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            padding-top: 100px;
        }

        .navbar {
            position: fixed;
            top: 15px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 1000;
            width: 95%;
            max-width: 1200px;
        }

        .content {
            flex: 1;
            display: flex;
            justify-content: center;
            padding: 20px;
        }

        /* Header Section */
        .page-header {
            text-align: center;
            margin-bottom: 40px;
            color: white;
        }

        .page-header h1 {
            font-size: clamp(28px, 5vw, 48px);
            font-family: 'Jura', sans-serif;
            font-weight: 700;
            margin-bottom: 15px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        .page-header p {
            font-size: clamp(16px, 2.5vw, 20px);
            opacity: 0.9;
            max-width: 600px;
            margin: 0 auto;
        }

        

        /* Main Content Section */
        .find-car-section {
            width: 100%;
            max-width: 1400px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 30px;
            padding: 40px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .section-header {
            text-align: center;
            margin-bottom: 40px;
        }

        .section-header h2 {
            font-size: clamp(24px, 4vw, 36px);
            font-family: 'Jura', sans-serif;
            color: #2d3748;
            margin-bottom: 10px;
            font-weight: 700;
        }

        .section-header p {
            color: #718096;
            font-size: clamp(14px, 2vw, 16px);
        }

        /* Results Counter */
        .results-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .results-count {
            color: #4a5568;
            font-weight: 600;
        }

        .sort-options select {
            padding: 8px 15px;
            border: 2px solid #e2e8f0;
            border-radius: 20px;
            background: white;
            font-family: 'Quicksand', sans-serif;
            color: #4a5568;
        }

        /* Vehicle Grid */
        .vehicle {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 25px;
            justify-content: center;
        }

        .card {
            background: white;
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            border: 1px solid rgba(0, 0, 0, 0.05);
            position: relative;
            height: 420px;
            display: flex;
            flex-direction: column;
        }

        .card:hover {
            transform: translateY(-10px) scale(1.02);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }

        .image-container {
            position: relative;
            width: 100%;
            height: 220px;
            overflow: hidden;
        }

        .image-container img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .card:hover .image-container img {
            transform: scale(1.1);
        }

        /* Status Badge */
        .available {
            position: absolute;
            top: 15px;
            left: 15px;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 1px;
            z-index: 2;
        }

        .status-available {
            background: linear-gradient(135deg, #48bb78, #38a169);
            color: white;
        }

        .status-unavailable {
            background: linear-gradient(135deg, #e53e3e, #c53030);
            color: white;
        }

        .status-maintenance {
            background: linear-gradient(135deg, #ed8936, #dd6b20);
            color: white;
        }

        .price {
            position: absolute;
            bottom: 15px;
            right: 15px;
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 10px 16px;
            border-radius: 20px;
            font-size: 16px;
            font-weight: 700;
            backdrop-filter: blur(10px);
        }

        /* Card Content */
        .card-content {
            padding: 20px;
            flex: 1;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .brand-title {
            font-family: 'Jura', sans-serif;
            font-size: 20px;
            font-weight: 700;
            color: #2d3748;
            margin-bottom: 5px;
        }

        .car-name {
            color: #718096;
            font-size: 14px;
            margin-bottom: 15px;
        }

        .car-details {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
        }

        .detail-item {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 13px;
            color: #4a5568;
            font-weight: 500;
        }

        .detail-item i {
            color: #667eea;
            width: 16px;
            text-align: center;
        }

        /* Loading States */
        .loading {
            opacity: 0;
            animation: fadeInUp 0.6s ease forwards;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #718096;
        }

        .empty-state i {
            font-size: 64px;
            color: #cbd5e0;
            margin-bottom: 20px;
        }

        .empty-state h3 {
            font-size: 24px;
            margin-bottom: 10px;
            color: #4a5568;
        }

        /* Pagination */
        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 40px;
            gap: 10px;
        }

        .pagination button {
            padding: 10px 20px;
            border: none;
            border-radius: 25px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .pagination button:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
        }

        /* Footer */
        .footer {
            margin-top: 60px;
        }

        /* Responsive Design */
        @media screen and (max-width: 1024px) {
            .find-car-section {
                padding: 30px 25px;
            }

            .vehicle {
                grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
                gap: 20px;
            }

            .filter-controls {
                justify-content: flex-start;
            }
        }

        @media screen and (max-width: 768px) {
            .page-container {
                padding-top: 80px;
            }

            .content {
                padding: 15px;
                padding-top: 60px;
            }

            .find-car-section {
                padding: 25px 20px;
                border-radius: 20px;
            }

            .filter-bar {
                padding: 15px;
            }

            .filter-controls {
                flex-direction: column;
                align-items: stretch;
            }

            .filter-item {
                width: 100%;
            }

            .filter-item select,
            .filter-item input {
                width: 100%;
            }

            .vehicle {
                grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
                gap: 15px;
            }

            .card {
                height: 380px;
            }

            .results-info {
                flex-direction: column;
                align-items: stretch;
                text-align: center;
            }
        }

        @media screen and (max-width: 480px) {
            .content {
                padding: 60px;
            }

            .find-car-section {
                padding: 10px 15px;
            }

            .vehicle {
                grid-template-columns: 1fr;
                gap: 15px;
            }

            .card {
                height: 360px;
                max-width: 350px;
                margin: 0 auto;
            }

            .card-details {
                grid-template-columns: 1fr;
                gap: 8px;
            }

            .filter-bar {
                padding: 12px;
            }
        }

        @media screen and (max-width: 320px) {
            .card {
                max-width: 300px;
            }

            .card-content {
                padding: 15px;
            }
        }

        /* Focus states for accessibility */
        .card:focus-within {
            outline: 3px solid rgba(102, 126, 234, 0.4);
            outline-offset: 2px;
        }

        /* Link styling */
        .card-link {
            color: inherit;
            text-decoration: none;
            display: block;
            height: 100%;
        }
    </style>
</head>

<body>
    <div class="page-container">
        <%- include('../partials/clientnavbar') %>

        <div class="content">
            <div class="find-car-section">
                <!-- Page Header -->
                <div class="section-header">
                    <h2>Find Your Perfect Car</h2>
                    <p>Choose from our premium collection of vehicles for your next adventure</p>
                </div>

                

                <!-- Vehicle Grid -->
                <div class="vehicle" id="vehicleGrid">
                    <% if (vehicle && vehicle.length > 0) { %>
                        <% vehicle.forEach((v, i) => { %>
                            <div class="card loading" " data-brand="<%= v.brand %>" data-fuel="<%= v.fuel %>" data-seating="<%= v.seating %>" data-price="<%= v.price %>">
                                <a href="/car/<%= v._id %>" class="card-link">
                                    <div class="image-container">
                                        <!-- Status Badge -->
                                        <% if (v.available === "Available") { %>
                                            <span class="available status-available">
                                                <i class="fas fa-check-circle"></i> <%= v.available %>
                                            </span>
                                        <% } else if (v.available === "Unavailable") { %>
                                            <span class="available status-unavailable">
                                                <i class="fas fa-times-circle"></i> <%= v.available %>
                                            </span>
                                        <% } else { %>
                                            <span class="available status-maintenance">
                                                <i class="fas fa-tools"></i> <%= v.available %>
                                            </span>
                                        <% } %>

                                        <!-- Car Image -->
                                        <% if (v.images && v.images.length > 0) { %>
                                            <img src="/uploads/<%= v.images[0] %>" alt="<%= v.brand %> <%= v.name %>">
                                        <% } else { %>
                                            <img src="/no-image.png" alt="No Image Available">
                                        <% } %>

                                        <!-- Price Badge -->
                                        <span class="price">
                                            ₹<%= v.price %><span style="font-size: 12px;">/day</span>
                                        </span>
                                    </div>

                                    <div class="card-content">
                                        <div>
                                            <h3 class="brand-title"><%= v.brand %></h3>
                                            <p class="car-name"><%= v.name %> - <%= v.year %></p>
                                        </div>

                                        <div class="car-details">
                                            <div class="detail-item">
                                                <i class="fa-solid fa-users"></i>
                                                <span><%= v.seating %> Seats</span>
                                            </div>
                                            <div class="detail-item">
                                                <i class="fa-solid fa-location-dot"></i>
                                                <span><%= v.location || "Available" %></span>
                                            </div>
                                            <div class="detail-item">
                                                <i class="fa-solid fa-gas-pump"></i>
                                                <span><%= v.fuel %></span>
                                            </div>
                                            <div class="detail-item">
                                                <i class="fa-solid fa-car-side"></i>
                                                <span><%= v.mode || "Standard" %></span>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="empty-state">
                            <i class="fas fa-car"></i>
                            <h3>No Cars Available</h3>
                            <p>Sorry, we don't have any cars matching your criteria at the moment.</p>
                        </div>
                    <% } %>
                </div>

                <!-- Pagination
                <div class="pagination">
                    <button onclick="previousPage()" id="prevBtn">
                        <i class="fas fa-chevron-left"></i> Previous
                    </button>
                    <button onclick="nextPage()" id="nextBtn">
                        Next <i class="fas fa-chevron-right"></i>
                    </button>
                </div> -->
            </div>
        </div>

        <footer class="footer">
            <%- include('../partials/footer') %>
        </footer>
    </div>

    <script>
        // Filter and Sort Functionality
        document.addEventListener('DOMContentLoaded', function() {
            const brandFilter = document.getElementById('brandFilter');
            const fuelFilter = document.getElementById('fuelFilter');
            const seatingFilter = document.getElementById('seatingFilter');
            const priceFilter = document.getElementById('priceFilter');
            const sortBy = document.getElementById('sortBy');
            const vehicleGrid = document.getElementById('vehicleGrid');
            const carCount = document.getElementById('carCount');

            // Filter and sort vehicles
            function filterAndSort() {
                const cards = Array.from(vehicleGrid.querySelectorAll('.card'));
                const brand = brandFilter.value.toLowerCase();
                const fuel = fuelFilter.value.toLowerCase();
                const seating = seatingFilter.value;
                const maxPrice = priceFilter.value ? parseInt(priceFilter.value) : Infinity;
                const sort = sortBy.value;

                // Filter cards
                const filteredCards = cards.filter(card => {
                    const cardBrand = card.dataset.brand.toLowerCase();
                    const cardFuel = card.dataset.fuel.toLowerCase();
                    const cardSeating = card.dataset.seating;
                    const cardPrice = parseInt(card.dataset.price);

                    return (!brand || cardBrand.includes(brand)) &&
                           (!fuel || cardFuel.includes(fuel)) &&
                           (!seating || cardSeating === seating) &&
                           (cardPrice <= maxPrice);
                });

                // Sort cards
                filteredCards.sort((a, b) => {
                    switch(sort) {
                        case 'price-low':
                            return parseInt(a.dataset.price) - parseInt(b.dataset.price);
                        case 'price-high':
                            return parseInt(b.dataset.price) - parseInt(a.dataset.price);
                        case 'year':
                            return b.querySelector('.car-name').textContent.match(/\d{4}/)?.[0] - 
                                   a.querySelector('.car-name').textContent.match(/\d{4}/)?.[0];
                        default:
                            return a.querySelector('.brand-title').textContent.localeCompare(
                                   b.querySelector('.brand-title').textContent);
                    }
                });

                // Hide all cards
                cards.forEach(card => card.style.display = 'none');

                // Show filtered cards
                filteredCards.forEach(card => card.style.display = 'block');

                // Update count
                carCount.textContent = filteredCards.length;

                // Show empty state if no results
                const existingEmptyState = vehicleGrid.querySelector('.empty-state');
                if (filteredCards.length === 0 && !existingEmptyState) {
                    const emptyState = document.createElement('div');
                    emptyState.className = 'empty-state';
                    emptyState.innerHTML = `
                        <i class="fas fa-search"></i>
                        <h3>No Cars Found</h3>
                        <p>Try adjusting your filters to see more results.</p>
                    `;
                    vehicleGrid.appendChild(emptyState);
                } else if (filteredCards.length > 0 && existingEmptyState) {
                    existingEmptyState.remove();
                }
            }

            // Add event listeners
            brandFilter.addEventListener('change', filterAndSort);
            fuelFilter.addEventListener('change', filterAndSort);
            seatingFilter.addEventListener('change', filterAndSort);
            priceFilter.addEventListener('input', filterAndSort);
            sortBy.addEventListener('change', filterAndSort);

            // Pagination functionality
            let currentPage = 1;
            const itemsPerPage = 9;

            window.previousPage = function() {
                if (currentPage > 1) {
                    currentPage--;
                    updatePagination();
                }
            };

            window.nextPage = function() {
                const visibleCards = vehicleGrid.querySelectorAll('.card:not([style*="display: none"])');
                const maxPages = Math.ceil(visibleCards.length / itemsPerPage);
                if (currentPage < maxPages) {
                    currentPage++;
                    updatePagination();
                }
            };

            function updatePagination() {
                const visibleCards = Array.from(vehicleGrid.querySelectorAll('.card:not([style*="display: none"])'));
                const startIndex = (currentPage - 1) * itemsPerPage;
                const endIndex = startIndex + itemsPerPage;

                visibleCards.forEach((card, index) => {
                    if (index >= startIndex && index < endIndex) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                });

                // Update button states
                document.getElementById('prevBtn').disabled = currentPage === 1;
                document.getElementById('nextBtn').disabled = currentPage === Math.ceil(visibleCards.length / itemsPerPage);
            }

            // Loading animation
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.opacity = '1';
                        entry.target.style.transform = 'translateY(0)';
                    }
                });
            });

            document.querySelectorAll('.loading').forEach(card => {
                observer.observe(card);
            });
        });
    </script>
</body>

</html>
